<?php

/**
 * BaseAccount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $guuid
 * @property string $username
 * @property string $password
 * @property string $first_name
 * @property string $last_name
 * @property string $mid_name
 * @property string $email
 * @property boolean $is_staff
 * @property boolean $is_active
 * @property boolean $is_superuser
 * @property timestamp $last_login
 * @property timestamp $created_on
 * @property timestamp $updated_on
 * @property Doctrine_Collection $Role
 * @property Doctrine_Collection $Permission
 * @property Doctrine_Collection $AccountRole
 * @property Doctrine_Collection $AccountPermission
 * @property Doctrine_Collection $Profile
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAccount extends izDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('account');
        $this->hasColumn('guuid', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('mid_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_staff', 'boolean', 1, array(
             'type' => 'boolean',
             'default' => false,
             'length' => '1',
             ));
        $this->hasColumn('is_active', 'boolean', 1, array(
             'type' => 'boolean',
             'default' => true,
             'length' => '1',
             ));
        $this->hasColumn('is_superuser', 'boolean', 1, array(
             'type' => 'boolean',
             'default' => false,
             'length' => '1',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('created_on', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('updated_on', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Role', array(
             'refClass' => 'AccountRole',
             'local' => 'account_id',
             'foreign' => 'role_id'));

        $this->hasMany('Permission', array(
             'refClass' => 'AccountPermission',
             'local' => 'account_id',
             'foreign' => 'permission_id'));

        $this->hasMany('AccountRole', array(
             'local' => 'id',
             'foreign' => 'account_id'));

        $this->hasMany('AccountPermission', array(
             'local' => 'id',
             'foreign' => 'account_id'));

        $this->hasMany('Profile', array(
             'local' => 'id',
             'foreign' => 'account_id'));
    }
}